# -*- mode: python; coding: utf-8; -*-

AGGREGATOR='timeseries'
TOTAL_LENGTH=LENGTH+2*DELAY
DESCRIPTION="UDP flood w/ping - variable number of hosts"
DEFAULTS={'PLOT': 'upload'}

BW=TEST_PARAMETERS.get("udp_bandwidth", None)

DATA_SETS = o([
    ('UDP upload avg',
     {'apply_to': [glob("UDP upload*", exclude=["UDP upload sum", "UDP upload fairness"])],
      'units': 'Mbits/s',
      'runner': 'average',
      'id': 'Avg'}),
    ('UDP upload sum',
     {'apply_to': [glob("UDP upload*", exclude=["UDP upload avg", "UDP upload fairness"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),
    ('UDP upload fairness',
     {'apply_to': [glob("UDP upload*", exclude=["UDP upload avg", "UDP upload sum"])],
       'units': 'Idx',
       'runner': 'fairness',}),
    ('Ping (ms) avg',
     {'apply_to': [glob("Ping (ms)*")],
       'units': 'ms',
       'runner': 'average',}),
    ('TCP upload sum',
     {'units': 'Mbits/s',
       'runner': 'null',}),
])

for i,host in enumerate(HOSTS):
        local_bind = LOCAL_BIND[i] if LOCAL_BIND else None
        DATA_SETS['UDP upload %s' % host] = \
         {'host': host, 'interval': STEP_SIZE, 'length': LENGTH, 'ip_version':
          IP_VERSION, 'udp': True, 'bw': BW, 'local_bind': local_bind, 'delay':
          DELAY, 'units': 'Mbits/s', 'id': host, 'udp': True, 'runner': 'iperf_csv'}
        DATA_SETS['Ping (ms) ICMP %s' % host] = \
         {'ip_version': IP_VERSION, 'interval': STEP_SIZE, 'length': TOTAL_LENGTH,
          'host': host, 'local_bind': local_bind, 'units': 'ms', 'id': host,
          'runner': 'ping'}

PLOTS = o([
    ('upload',
     {'description': 'Bandwidth plot',
      'type': 'box_combine',
      'series': [{'data': glob("UDP upload*", exclude=["UDP upload fairness", "UDP upload sum", "UDP upload avg"]),
                  'label': 'Upload',
                  'combine_mode': 'mean'},
                 {'data': "UDP upload avg",
                  'label': 'Upload -- avg',
                  'combine_mode': 'mean'}]}),
    ('upload_bar',
     {'description': 'Bandwidth bar plot',
      'type': 'bar_combine',
      'parent': 'upload'}),
    ('ping',
     {'description': 'Ping plot',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [{'data': glob('Ping (ms) ICMP *'),
                  'label': 'Ping (ms) ICMP'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),
    ('totals',
     {'description': 'Bandwidth and ping box plot',
      'type': 'box_combine',
      'dual_axes': True,
      'series': [{'data': 'UDP upload sum',
                  'label': 'Upload',
                  'combine_mode': 'mean'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Ping (ms) avg',
                  'axis': 2}]}),
    ('totals_throughput',
     {'description': 'Bandwidth bar plot',
      'type': 'bar_combine',
      'series': [{'data': 'UDP upload sum',
                  'label': 'Upload',
                  'combine_mode': 'mean'}]}),
    ('udp_tcp_combine',
     {'description': 'Bandwidth bar plot for UDP and TCP tests',
      'type': 'bar_combine',
      'dual_axes': True,
      'series': [{'data': 'UDP upload sum',
                  'label': 'UDP Upload',
                  'combine_mode': 'mean'},
                 {'data': 'TCP upload sum',
                  'label': 'TCP Upload',
                  'axis': 2,
                  'combine_mode': 'mean'},
      ]}),
    ('ping_cdf',
     {'description': 'Ping CDF plot',
      'type': 'cdf',
      'series': [{'data': glob('Ping (ms) ICMP*'),
                  'label': 'Ping (ms)'},],
      'cutoff': (DELAY,-DELAY)}),

    ('ping_cdf_combine',
     {'description': 'Ping CDF plot',
      'type': 'cdf_combine',
      'group_by': 'groups_concat',
      'axis_labels': ['Latency (ms)'],
      'parent': 'ping',
      'cutoff': (DELAY,-DELAY)}),
    ])

include("common.inc")
