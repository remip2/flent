## -*- mode: python; coding: utf-8 -*-

## rrul test specification

include("netperf_definitions.inc")
DESCRIPTION="Realtime Response Under Load with HTTP"
DEFAULTS={'PLOT': "all_scaled"}

EXTRA=TEST_PARAMETERS.get("extra_test_args", "")
HTTP_SIZE=TEST_PARAMETERS.get("http_size", "10K")
HTTP_PORT=TEST_PARAMETERS.get("http_port", 80)
LANIP=TEST_PARAMETERS.get("lan_ip", None)
WANIP=TEST_PARAMETERS.get("wan_ip", None)
LAN_IF=TEST_PARAMETERS.get("lan_if", None)
WAN_IF=TEST_PARAMETERS.get("wan_if", None)
EXTRA=TEST_PARAMETERS.get("extra_test_args", "")

DATA_SETS = o([

    ('EGRESS_WAN_CS1', 
        {'length': TOTAL_LENGTH, 'dstip': WANIP, 'marking': 'CS1','interface': WAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'WANCS1'}),
    ('EGRESS_WAN_CS1::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_WAN_CS1::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_WAN_CS2', 
        {'length': TOTAL_LENGTH, 'dstip': WANIP, 'marking': 'CS2','interface': WAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'WANCS2'}),
    ('EGRESS_WAN_CS2::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_WAN_CS2::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_WAN_CS3', 
        {'length': TOTAL_LENGTH, 'dstip': WANIP, 'marking': 'CS3','interface': WAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'WANCS3'}),
    ('EGRESS_WAN_CS3::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_WAN_CS3::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_WAN_HTTP', 
        {'length': TOTAL_LENGTH, 'dstip': WANIP, 'dstport': 80, 'interface': WAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'WANCS4'}),
    ('EGRESS_WAN_HTTP::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_WAN_HTTP::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_LAN_CS1',
        {'length': TOTAL_LENGTH, 'srcip': WANIP, 'dstip': LANIP, 'marking': 'CS1', 'interface': LAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'LANCS1'}),
    ('EGRESS_LAN_CS1::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_LAN_CS1::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_LAN_CS2',
        {'length': TOTAL_LENGTH, 'srcip': WANIP, 'dstip': LANIP, 'marking': 'CS2', 'interface': LAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'LANCS2'}),
    ('EGRESS_LAN_CS2::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_LAN_CS2::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_LAN_CS3',
        {'length': TOTAL_LENGTH, 'srcip': WANIP, 'dstip': LANIP, 'marking': 'CS3', 'interface': LAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'LANCS3'}),
    ('EGRESS_LAN_CS3::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_LAN_CS3::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_LAN_HTTP',
        {'length': TOTAL_LENGTH, 'srcip': WANIP, 'dstip': LANIP, 'srcport': 80, 'interface': LAN_IF,
         'units': 'Mbits/s', 'runner': 'if_perf', 'id': 'LANCS4'}),
    ('EGRESS_LAN_HTTP::packets', {'units': 'packets/s', 'runner': 'null'}),
    ('EGRESS_LAN_HTTP::bandwidth', {'units': 'Mbits/s', 'runner': 'null'}),

    ('EGRESS_LAN_SUM::packets',
     {'apply_to': [ glob('EGRESS_LAN_*::packets') ], # 'EGRESS_LAN_CS1::packets', 'EGRESS_LAN_CS2::packets', 'EGRESS_LAN_CS3::packets', 'EGRESS_LAN_CS4::packets'
       'units': 'packets/s',
       'runner': 'sum',}),

    ('EGRESS_LAN_SUM::bandwidth',
     {'apply_to': [glob('EGRESS_LAN_*::bandwidth') ], #, 'EGRESS_LAN_CS2::bandwidth', 'EGRESS_LAN_CS3::bandwidth', 'EGRESS_LAN_HTTP::bandwidth'],
       'units': 'Mbits/s',
       'runner': 'sum',}),

    ('EGRESS_WAN_SUM::packets',
     {'apply_to': [glob('EGRESS_WAN_*::packets') ], # , 'EGRESS_WAN_CS2::packets', 'EGRESS_WAN_CS3::packets', 'EGRESS_WAN_HTTP::packets'],
       'units': 'packets/s',
       'runner': 'sum',}),

    ('EGRESS_WAN_SUM::bandwidth',
     {'apply_to': [glob('EGRESS_WAN_*::bandwidth') ], # , 'EGRESS_WAN_CS2::bandwidth', 'EGRESS_WAN_CS3::bandwidth', 'EGRESS_WAN_HTTP::bandwidth'],
       'units': 'Mbits/s',
       'runner': 'sum',}),

    ('TCP upload CS1',
     {'test': 'TCP_STREAM', 'length': LENGTH, 'host': HOST, 'marking': 'CS1,CS1', 'extra_test_args': EXTRA,
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo', 'id': 'CS1'}),
    ('TCP upload CS2',
     {'test': 'TCP_STREAM', 'length': LENGTH, 'host': HOST, 'marking': 'CS2,CS2', 'extra_test_args': EXTRA,
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo', 'id': 'CS2'}),
    ('TCP upload CS3',
     {'test': 'TCP_STREAM', 'length': LENGTH, 'host': HOST, 'marking': 'CS3,CS3', 'extra_test_args': EXTRA,
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo', 'id': 'CS3'}),
    ('HTTP_upload',
     {'protocol': 'http', 'port': HTTP_PORT, 'length': LENGTH, 'host': HOST, 'size': HTTP_SIZE, "direction": "upload",
       'delay': DELAY, 'units': 'Mbits/s', 'runner': 'http_perf', 'id': 'http_up'}),
    ('HTTP_upload::upload', {'units': 'Mbits/s', 'runner': 'null'}),
    ('HTTP_upload::download', {'units': 'Mbits/s', 'runner': 'null'}),
    ('HTTP_upload::transaction', {'units': 'transaction/s', 'runner': 'null'}),
    ('HTTP_upload::responsetime', {'units': 'ms', 'runner': 'null'}),
    

    ('TCP download CS1',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS1,CS1',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download CS2',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS2,CS2',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download CS3',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS3,CS3',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('HTTP_download',
     {'protocol': 'http', 'port': HTTP_PORT, 'length': LENGTH, 'host': HOST, 'size': HTTP_SIZE,
       'delay': DELAY, 'units': 'Mbits/s', 'runner': 'http_perf'}),
    ('HTTP_download::upload', {'units': 'Mbits/s', 'runner': 'null'}),
    ('HTTP_download::download', {'units': 'Mbits/s', 'runner': 'null'}),
    ('HTTP_download::transaction', {'units': 'transaction/s', 'runner': 'null'}),
    ('HTTP_download::responsetime', {'units': 'ms', 'runner': 'null'}),


    ('TCP upload avg',
     {'apply_to': ["HTTP_upload::upload", "HTTP_download::upload", 'TCP upload CS1', 'TCP upload CS2', 'TCP upload CS3' ],
       'units': 'Mbits/s',
       'id': 'Avg',
       'runner': 'average',}),
    ('TCP upload sum',
     {'apply_to': ["HTTP_upload::upload", "HTTP_download::upload", 'TCP upload CS1', 'TCP upload CS2', 'TCP upload CS3'],
       'units': 'Mbits/s',
       'runner': 'sum',}),

    ('TCP download avg',
     {'apply_to': ["HTTP_upload::download", "HTTP_download::download", glob("TCP download*", exclude=["TCP download sum"])],
       'units': 'Mbits/s',
       'runner': 'average',}),
    ('TCP download sum',
     {'apply_to': ["HTTP_upload::download", "HTTP_download::download", glob("TCP download*", exclude=["TCP download avg"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),
    ('TCP totals',
     {'apply_to': ["HTTP_upload::download", "HTTP_download::download", "HTTP_upload::upload", "HTTP_download::upload",
                   glob("TCP*", exclude=["TCP download avg", "TCP download sum", "TCP upload avg", "TCP upload sum"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),

    ('Ping (ms) UDP CS1',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': HOST, 'marking':
      'CS1,CS1','units': 'ms'}),
    ('Ping (ms) UDP CS2',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': HOST, 'marking':
      'CS2,CS2', 'units': 'ms'}),
    ('Ping (ms) UDP CS3',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': HOST, 'marking':
      'CS3,CS3', 'units': 'ms'}),

    ('Ping (ms) ICMP',
     {'ip_version': IP_VERSION, 'interval': STEP_SIZE, 'length': TOTAL_LENGTH,
      'host': HOST, 'units': 'ms', 'runner': 'ping'}),
    ('Ping (ms) avg',
     {'apply_to': [glob("Ping (ms)*")],
       'units': 'ms',
       'runner': 'average',}),
    ])

PLOTS = o([
    ('download',
     {'description': 'Download bandwidth plot',
      'type': 'timeseries',
      'legend_title': 'TCP download',
      'series': [{'data': 'TCP download CS1',
                  'label': 'CS1'},
                 {'data': 'TCP download CS2',
                  'label': 'CS2'},
                 {'data': 'TCP download CS3',
                  'label': 'CS3'},
                 {'data': 'HTTP_download::download',
                  'label': 'HTTP download'},
                 {'data': 'HTTP_upload::download',
                  'label': 'HTTP upload'},
                 {'data': 'TCP download avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('download_scaled',
     {'description': 'Download bandwidth w/axes scaled to remove outliers',
      'parent': 'download',
      'scaling': (5,95)}),

    ('upload',
     {'description': 'Upload bandwidth plot',
      'type': 'timeseries',
      'legend_title': 'TCP upload',
      'series': [{'data': 'TCP upload CS1',
                  'label': 'CS1'},
                 {'data': 'TCP upload CS2',
                  'label': 'CS2'},
                 {'data': 'TCP upload CS3',
                  'label': 'CS3'},
                 {'data': 'HTTP_upload::upload',
                  'label': 'HTTP upload'},
                  {'data': 'HTTP_download::upload',
                  'label': 'HTTP download'},
                 {'data': 'TCP upload avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('upload_scaled',
     {'description': 'Upload bandwidth w/axes scaled to remove outliers',
      'parent': 'upload',
      'scaling': (5,95)}),

    ('ping',
     {'description': 'Ping plot',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [
                 {'data': 'Ping (ms) UDP CS1',
                  'label': 'UDP CS1'},
                 {'data': 'Ping (ms) UDP CS2',
                  'label': 'UDP CS2'},
                 {'data': 'Ping (ms) UDP CS3',
                  'label': 'UDP CS3'},                 
                 {'data': 'Ping (ms) ICMP',
                  'label': 'ICMP'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('ping_scaled',
     {'description': 'Ping w/axes scaled to remove outliers',
      'parent': 'ping',
      'scaling': (5,95)}),

    ('ping_cdf',
     {'description': 'Ping CDF plot',
      'type': 'cdf',
      'axis_labels': ['Latency (ms)'],
      'parent': 'ping',
      'cutoff': (DELAY,DELAY)}),

    ('icmp_cdf',
     {'description': 'ICMP CDF plot',
      'type': 'cdf',
      'axis_labels': ['Latency (ms)'],
      'series': [{'data': 'Ping (ms) ICMP',
                  'label': 'Ping (ms)'},
                 ],
      'cutoff': (DELAY,DELAY)}),

    ('totals_bandwidth',
     {'description': 'Total bandwidth',
      'type': 'timeseries',
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'smoothing': 10},
                 {'data': 'TCP upload sum',
                  'label': 'Upload',
                  'smoothing': 10}]}),
    ('totals',
     {'description': 'Total bandwidth and average ping plot',
      'type': 'timeseries',
      'dual_axes': True,
      'axis_labels': [None, 'Latency (ms)'],
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'smoothing': 10},
                 {'data': 'TCP upload sum',
                  'label': 'Upload',
                  'smoothing': 10},
                 {'data': 'Ping (ms) avg',
                  'label': 'Ping (ms)',
                  'smoothing': 10,
                  'axis': 2}]}),
    ('totals_scaled',
     {'description': 'Total bandwidth and average ping plot (scaled)',
      'parent': 'totals',
      'scaling': (5,95)}),

    ('all_scaled',
     {'description': 'Download, upload, ping (scaled versions)',
      'type': 'meta',
      'subplots': ('download_scaled', 'upload_scaled', 'ping_scaled')}),

    ('all',
     {'description': 'Download, upload, ping (unscaled versions)',
      'type': 'meta',
      'subplots': ('download', 'upload', 'ping')}),

    ('box_download',
     {'description': 'Download bandwidth box plot',
      'parent': 'download',
      'type': 'box'}),

    ('box_upload',
     {'description': 'Upload bandwidth box plot',
      'parent': 'upload',
      'type': 'box'}),

    ('box_ping',
     {'description': 'Ping box plot',
      'parent': 'ping',
      'type': 'box'}),

    ('box_totals',
     {'description': 'Box plot of totals',
      'parent': 'totals',
      'type': 'box',}),
    ('icmp_combine',
     {'description': 'Combined ICMP ping plot',
      'parent': 'icmp_cdf',
      'type': 'timeseries_combine',
      'group_by': 'groups_points',
      'cutoff': None}),

    ('box_combine',
     {'description': 'Box plot of averages of several data files.',
      'type': 'box_combine',
      'dual_axes': True,
      'axis_labels': ['Mean TCP goodput (Mbit/s)', 'Mean induced latency (ms)'],
      'cutoff': (DELAY,DELAY),
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'combine_mode': 'meta:MEAN_VALUE'},
                 {'data': 'TCP upload sum',
                  'label': 'Upload',
                  'combine_mode': 'meta:MEAN_VALUE'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Induced latency (ms)',
                  'combine_mode': 'mean_span',
                  'axis': 2}]}),
    ('box_combine_up',
     {'description': 'Box plot of averages of several data files - Upload.',
      'type': 'box_combine',
      'group_by': 'series',
      'series': [{'data': glob('TCP upload *', exclude=["TCP upload sum"]),
                  'combine_mode': 'meta:MEAN_VALUE', 'label': None}]}),
    ('box_combine_down',
     {'description': 'Box plot of averages of several data files - Download.',
      'type': 'box_combine',
      'group_by': 'series',
      'series': [{'data': glob('TCP download *', exclude=["TCP download sum"]),
                  'combine_mode': 'meta:MEAN_VALUE', 'label': None}]}),
    ('bar_combine_up',
     {'description': 'Bar plot of averages of several data files - Upload.',
      'type': 'bar_combine',
      'parent': 'box_combine_up'}),
    ('bar_combine_down',
     {'description': 'Bar plot of averages of several data files - Download.',
      'type': 'bar_combine',
      'parent': 'box_combine_down'}),
    ('qq_icmp',
     {'description': 'Q-Q plot of ICMP pings',
      'type': 'qq',
      'series': [{'data': 'Ping (ms) ICMP',
                  'label': 'Latency (ms)'},
                 ]}),

    ('qq_download',
     {'description': 'Q-Q plot of total download bandwidth',
      'type': 'qq',
      'series': [{'data': 'TCP download sum',
                  'label': 'Download (Mbps)'},
                 ]}),

    ('qq_upload',
     {'description': 'Q-Q plot of total upload bandwidth',
      'type': 'qq',
      'series': [{'data': 'TCP upload sum',
                  'label': 'Upload (Mbps)'},
                 ]}),
    ('ellipsis',
     {'description': 'Ellipsis plot',
      'type': 'ellipsis',
      'series': [{'data': 'Ping (ms) avg',
                   'label': 'Latency (avg)'},
                   {'data': 'TCP upload sum',
                  'label': 'Upload (Mbps)'}
                   ]}),
    ('ellipsis_down',
     {'description': 'Ellipsis plot',
      'type': 'ellipsis',
      'series': [{'data': 'Ping (ms) avg',
                   'label': 'Latency (avg)'},
                {'data': 'TCP download sum',
                 'label': 'Download (Mbps)'},
                   ]}),
    ('ellipsis_sum',
     {'description': 'Ellipsis plot',
      'type': 'ellipsis',
      'series': [{'data': 'Ping (ms) avg',
                   'label': 'Latency (avg)'},
                {'data': 'TCP totals',
                 'label': 'Throughput (Mbps)'}
                   ]}),

    ('transaction',
     {'description': 'HTTP transaction plot',
      'type': 'timeseries',
      'series': [{'data': 'HTTP_download::transaction',
                  'label': 'HTTP download transactions/s'},
                 {'data': 'HTTP_upload::transaction',
                  'label': 'HTTP upload transactions/s'}
                ]}),

    ('responsetime',
     {'description': 'HTTP response time plot',
      'type': 'timeseries',
      'series': [{'data': 'HTTP_download::responsetime',
                  'label': 'HTTP download response time'},
                 {'data': 'HTTP_upload::responsetime',
                  'label': 'HTTP upload response time'}
                ]}),

    ('egress_wan_bandwidth',
      {'description': "WAN interface egress (bandwidth)",
       'type': 'timeseries',
        'axis_labels': ['Throughput (Mbit/s)'],
      'series': [
        {'data': 'EGRESS_WAN_CS1::bandwidth', 'label': 'WAN egress CS1'},
        {'data': 'EGRESS_WAN_CS2::bandwidth', 'label': 'WAN egress CS2'},
        {'data': 'EGRESS_WAN_CS3::bandwidth', 'label': 'WAN egress CS3'},
        {'data': 'EGRESS_WAN_HTTP::bandwidth', 'label': 'WAN egress HTTP'},
      ]}),
    ('egress_wan_packets',
      {'description': "WAN interface egress (packets)",
       'type': 'timeseries',
        'axis_labels': ['(Throughput (packets/s)'],
      'series': [
        {'data': 'EGRESS_WAN_CS1::packets', 'label': 'WAN egress CS1'},
        {'data': 'EGRESS_WAN_CS2::packets', 'label': 'WAN egress CS2'},
        {'data': 'EGRESS_WAN_CS3::packets', 'label': 'WAN egress CS3'},
        {'data': 'EGRESS_WAN_HTTP::packets', 'label': 'WAN egress HTTP'},
      ]}),
    ('egress_lan_bandwidth',
      {'description': "LAN interface egress (bandwidth)",
       'type': 'timeseries',
        'axis_labels': ['Throughput (Mbit/s)'],
      'series': [
        {'data': 'EGRESS_LAN_CS1::bandwidth', 'label': 'LAN egress CS1'},
        {'data': 'EGRESS_LAN_CS2::bandwidth', 'label': 'LAN egress CS2'},
        {'data': 'EGRESS_LAN_CS3::bandwidth', 'label': 'LAN egress CS3'},
        {'data': 'EGRESS_LAN_HTTP::bandwidth', 'label': 'LAN egress HTTP'},
      ]}),
    ('egress_lan_packets',
      {'description': "LAN interface egress (packets)",
       'type': 'timeseries',
        'axis_labels': ['(Throughput (packets/s)'],
      'series': [
        {'data': 'EGRESS_LAN_CS1::packets', 'label': 'LAN egress CS1'},
        {'data': 'EGRESS_LAN_CS2::packets', 'label': 'LAN egress CS2'},
        {'data': 'EGRESS_LAN_CS3::packets', 'label': 'LAN egress CS3'},
        {'data': 'EGRESS_LAN_HTTP::packets', 'label': 'LAN egress HTTP'},
      ]}),

    ('egress_wan_bandwidth_total',
      {'description': "Total WAN interface egress (bandwidth)",
       'type': 'timeseries',
        'axis_labels': ['Throughput (Mbit/s)'],
      'series': [
        {'data': 'EGRESS_WAN_SUM::bandwidth', 'label': 'WAN egress'}
      ]}),
    ('egress_wan_packets_total',
      {'description': "Total WAN interface egress (packets)",
       'type': 'timeseries',
        'axis_labels': ['(Throughput (packets/s)'],
      'series': [
        {'data': 'EGRESS_WAN_SUM::packets', 'label': 'WAN egress'}
      ]}),
    ('egress_lan_bandwidth_total',
      {'description': "Total LAN interface egress (bandwidth)",
       'type': 'timeseries',
        'axis_labels': ['Throughput (Mbit/s)'],
      'series': [
        {'data': 'EGRESS_LAN_SUM::bandwidth', 'label': 'LAN egress'}
      ]}),
    ('egress_lan_packets_total',
      {'description': "Total LAN interface egress (packets)",
       'type': 'timeseries',
        'axis_labels': ['(Throughput (packets/s)'],
      'series': [
        {'data': 'EGRESS_LAN_SUM::packets', 'label': 'LAN egress'}
      ]}),
    ])

include("common.inc")
