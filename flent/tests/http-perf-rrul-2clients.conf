## -*- mode: python; coding: utf-8 -*-

DESCRIPTION = "HTTP download/upload + rrul with 2 clients"
DEFAULTS = {"PLOT": "bandwidth"}
TOTAL_LENGTH = LENGTH + 2 * DELAY
HTTP_SIZE = TEST_PARAMETERS.get("http_size", "1M")
HTTP_PORT = TEST_PARAMETERS.get("http_port", 80)
EXTRA=TEST_PARAMETERS.get("extra_test_args", "")

DATA_SETS = o()

DATA_SETS["HTTP_GET1"] = {
    "protocol": "http",
    "direction": "download",
    "port": HTTP_PORT,
    "length": LENGTH,
    "host": HOST,
    "size": HTTP_SIZE,
    "units": "Mbits/s",
    "runner": "http_perf",
    "id": "HTTP",
}
DATA_SETS["HTTP_GET1::upload"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_GET1::download"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_GET1::transaction"] = {"units": "transaction/s", "runner": "null"}
DATA_SETS["HTTP_GET1::responsetime"] = {"units": "ms", "runner": "null"}

DATA_SETS["HTTP_GET2"] = {
    "protocol": "http",
    "direction": "download",
    "port": HTTP_PORT,
    "length": LENGTH,
    "host": HOST,
    "size": HTTP_SIZE,
    "units": "Mbits/s",
    "runner": "http_perf",
    "id": "HTTP",
}
DATA_SETS["HTTP_GET2::upload"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_GET2::download"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_GET2::transaction"] = {"units": "transaction/s", "runner": "null"}
DATA_SETS["HTTP_GET2::responsetime"] = {"units": "ms", "runner": "null"}

DATA_SETS["HTTP_POST1"] = {
    "protocol": "http",
    "direction": "upload",
    "port": HTTP_PORT,
    "length": LENGTH,
    "host": HOST,
    "size": HTTP_SIZE,
    "units": "Mbits/s",
    "runner": "http_perf",
    "id": "HTTP",
}
DATA_SETS["HTTP_POST1::upload"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_POST1::download"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_POST1::transaction"] = {"units": "transaction/s", "runner": "null"}
DATA_SETS["HTTP_POST1::responsetime"] = {"units": "ms", "runner": "null"}

DATA_SETS["HTTP_POST2"] = {
    "protocol": "http",
    "direction": "upload",
    "port": HTTP_PORT,
    "length": LENGTH,
    "host": HOST,
    "size": HTTP_SIZE,
    "units": "Mbits/s",
    "runner": "http_perf",
    "id": "HTTP",
}
DATA_SETS["HTTP_POST2::upload"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_POST2::download"] = {"units": "Mbits/s", "runner": "null"}
DATA_SETS["HTTP_POST2::transaction"] = {"units": "transaction/s", "runner": "null"}
DATA_SETS["HTTP_POST2::responsetime"] = {"units": "ms", "runner": "null"}

DATA_SETS["TCP upload CS1"] = {
    "test": "TCP_STREAM",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS1,CS1",
    "extra_test_args": EXTRA,
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
    "id": "CS1",
}
DATA_SETS["TCP upload CS2"] = {
    "test": "TCP_STREAM",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS2,CS2",
    "extra_test_args": EXTRA,
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
    "id": "CS2",
}
DATA_SETS["TCP upload CS3"] = {
    "test": "TCP_STREAM",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS3,CS3",
    "extra_test_args": EXTRA,
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
    "id": "CS3",
}
DATA_SETS["TCP download CS1"] = {
    "test": "TCP_MAERTS",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS1,CS1",
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
}
DATA_SETS["TCP download CS2"] = {
    "test": "TCP_MAERTS",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS2,CS2",
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
}
DATA_SETS["TCP download CS3"] = {
    "test": "TCP_MAERTS",
    "length": LENGTH,
    "host": HOST,
    "marking": "CS3,CS3",
    "delay": DELAY,
    "units": "Mbits/s",
    "runner": "netperf_demo",
}

DATA_SETS["Ping (ms) UDP CS1"] = {
    "runner": "udp_rtt",
    "length": TOTAL_LENGTH,
    "host": HOST,
    "marking": "CS1,CS1",
    "units": "ms",
}
DATA_SETS["Ping (ms) UDP CS2"] = {
    "runner": "udp_rtt",
    "length": TOTAL_LENGTH,
    "host": HOST,
    "marking": "CS2,CS2",
    "units": "ms",
}
DATA_SETS["Ping (ms) UDP CS3"] = {
    "runner": "udp_rtt",
    "length": TOTAL_LENGTH,
    "host": HOST,
    "marking": "CS3,CS3",
    "units": "ms",
}
DATA_SETS["Ping (ms) ICMP"] = {
    "ip_version": IP_VERSION,
    "interval": STEP_SIZE,
    "length": TOTAL_LENGTH,
    "host": HOST,
    "units": "ms",
    "runner": "ping",
}

DATA_SETS["Ping (ms) avg"] = {
    "apply_to": [glob("Ping (ms)*")],
    "units": "ms",
    "runner": "average",
}

DATA_SETS["TCP upload sum"] = {
    "apply_to": [
        "HTTP_GET1::upload",
        "HTTP_GET2::upload",
        "HTTP_POST1::upload",
        "HTTP_POST2::upload",
        "TCP upload CS1",
        "TCP upload CS2",
        "TCP upload CS3",
    ],
    "units": "Mbits/s",
    "runner": "sum",
}
DATA_SETS["TCP download sum"] = {
    "apply_to": [
        "HTTP_GET1::download",
        "HTTP_GET2::download",
        "HTTP_POST1::download",
        "HTTP_POST2::download",
        "TCP download CS1",
        "TCP download CS2",
        "TCP download CS3",
    ],
    "units": "Mbits/s",
    "runner": "sum",
}

DATA_SETS["TCP upload sum client1"] = {
    "apply_to": [
        "HTTP_GET1::upload",
        "HTTP_POST1::upload",
        "TCP upload CS1",
        "TCP upload CS2",
    ],
    "units": "Mbits/s",
    "runner": "sum",
}
DATA_SETS["TCP download sum client1"] = {
    "apply_to": [
        "HTTP_GET1::download",
        "HTTP_POST1::download",
        "TCP download CS1",
        "TCP download CS2",
    ],
    "units": "Mbits/s",
    "runner": "sum",
}

DATA_SETS["TCP upload sum client2"] = {
    "apply_to": ["HTTP_GET2::upload", "HTTP_POST2::upload", "TCP upload CS3"],
    "units": "Mbits/s",
    "runner": "sum",
}
DATA_SETS["TCP download sum client2"] = {
    "apply_to": ["HTTP_GET2::download", "HTTP_POST2::download", "TCP download CS3"],
    "units": "Mbits/s",
    "runner": "sum",
}



PLOTS["bandwidth_upload"] = {
    "description": "TCP upload bandwidth plot",
    "type": "timeseries",
    "series": [
        {"data": "HTTP_GET1::upload", "label": "HTTP GET client 1 upload out"},
        {"data": "HTTP_GET2::upload", "label": "HTTP GET client 2 upload out"},
        {"data": "HTTP_POST1::upload", "label": "HTTP POST client 1 upload out"},
        {"data": "HTTP_POST2::upload", "label": "HTTP POST client 2 upload out"},
        {"data": "TCP upload CS1", "label": "TCP upload CS1"},
        {"data": "TCP upload CS2", "label": "TCP upload CS2"},
        {"data": "TCP upload CS3", "label": "TCP upload CS3"},
    ],
}

PLOTS["bandwidth_download"] = {
    "description": "TCP download bandwidth plot",
    "type": "timeseries",
    "series": [
        {"data": "HTTP_GET1::download", "label": "HTTP GET client 1 download in"},
        {"data": "HTTP_GET2::download", "label": "HTTP GET client 2 download in"},
        {"data": "HTTP_POST1::download", "label": "HTTP POST client 1 download in"},
        {"data": "HTTP_POST2::download", "label": "HTTP POST client 2 download in"},
        {"data": "TCP download CS1", "label": "TCP download CS1"},
        {"data": "TCP download CS2", "label": "TCP download CS2"},
        {"data": "TCP download CS3", "label": "TCP download CS3"},
    ],
}

PLOTS["transaction"] = {
    "description": "HTTP transaction plot",
    "type": "timeseries",
    "series": [
        {"data": "HTTP_GET1::transaction", "label": "HTTP GET client 2 transactions"},
        {"data": "HTTP_GET2::transaction", "label": "HTTP GET client 2 transactions"},
        {"data": "HTTP_POST1::transaction", "label": "HTTP POST client 1 transactions"},
        {"data": "HTTP_POST2::transaction", "label": "HTTP POST client 2 transactions"},
    ],
}

PLOTS["responsetime"] = {
    "description": "HTTP response time plot",
    "type": "timeseries",
    "series": [
        {"data": "HTTP_GET1::responsetime", "label": "HTTP GET client 1 response time"},
        {"data": "HTTP_GET2::responsetime", "label": "HTTP GET client 2 response time"},
        {
            "data": "HTTP_POST1::responsetime",
            "label": "HTTP POST client 1 response time",
        },
        {
            "data": "HTTP_POST2::responsetime",
            "label": "HTTP POST client 2 response time",
        },
    ],
}

PLOTS["bandwidth_total"] = {
    "description": "TCP bandwidth total plot",
    "type": "timeseries",
    "series": [
        {"data": "TCP upload sum", "label": "TCP upload total"},
        {"data": "TCP download sum", "label": "TCP download total"},
    ],
}

PLOTS["bandwidth_total_client1"] = {
    "description": "TCP bandwidth total plot (client1)",
    "type": "timeseries",
    "series": [
        {"data": "TCP upload sum client1", "label": "TCP upload total (client1)"},
        {"data": "TCP download sum client1", "label": "TCP download total (client1)"},
    ],
}

PLOTS["bandwidth_total_client2"] = {
    "description": "TCP bandwidth total plot (client2)",
    "type": "timeseries",
    "series": [
        {"data": "TCP upload sum client2", "label": "TCP upload total (client2)"},
        {"data": "TCP download sum client2", "label": "TCP download total (client2)"},
    ],
}

PLOTS["ping"] = {
    "description": "Ping plot",
    "type": "timeseries",
    "legend_title": "Ping (ms)",
    "axis_labels": ["Latency (ms)"],
    "series": [
        {"data": "Ping (ms) UDP CS1", "label": "UDP CS1"},
        {"data": "Ping (ms) UDP CS2", "label": "UDP CS2"},
        {"data": "Ping (ms) UDP CS3", "label": "UDP CS3"},
        {"data": "Ping (ms) ICMP", "label": "ICMP"},
        {
            "data": "Ping (ms) avg",
            "label": "Avg",
            "smoothing": 10,
            "color": "black",
            "linewidth": 2,
        },
    ],
}

PLOTS["totals"] = {
    "description": "Total bandwidth and average ping plot",
    "type": "timeseries",
    "dual_axes": True,
    "axis_labels": [None, "Latency (ms)"],
    "series": [
        {"data": "TCP download sum", "label": "Download", "smoothing": 10},
        {"data": "TCP upload sum", "label": "Upload", "smoothing": 10},
        {"data": "Ping (ms) avg", "label": "Ping (ms)", "smoothing": 10, "axis": 2},
    ],
}

PLOTS["box_totals"] = {
    "description": "Box plot of totals",
    "parent": "totals",
    "type": "box",
}

include("common.inc")
